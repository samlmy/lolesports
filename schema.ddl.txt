drop schema if exists LolEsport cascade;
create schema LolEsport;
set search_path to LolEsport;

-- This table is used to store the information of each team.
-- A tuple in this relation represents a team. teamName is the name of the team. 
-- League is an acronym of the league name which differs by region.
create table Team ( 
	teamName text,
	league text not null,
	primary key (teamName)
);

-- This table is used to store the information of each player.
-- A tuple in this relation represents a player. playerName is their name that 
-- they chose to show in the game. teamName is the name of the team that they 
-- play for.
create table Player (
	playerName text,
	teamName text not null,
	primary key (playerName, teamName),
	foreign key (teamName) references Team(teamName)
);

-- This table is used to store the general information of each game.
-- A tuple in this relation represents a match. gameID is an unique ID of this 
-- game. Length is the duration of the game in seconds. Patch is the version
-- of the game. Red is the red team name, blue is the blue team name. Result is
-- the winning team name.
create table Match (
	gameID text,
	length int not null,
	patch text not null,
	blue text not null,
	red text not null,
	result text not null,
	primary key (gameID), 
	foreign key (blue) references Team(teamName),
	foreign key (red) references Team(teamName)
);

-- This table is used to store the in game statistics of each team.
-- A tuple in this relation represents the timeline of a match. gameID is an 
-- unique ID of this game. killsAt10, killsAt15, goldAt10 and goldAt15 are the 
-- number of kills and gold at 10 minutes interval and 15 minutes interval of 
-- the game.
create table TeamScoreboard (
	gameID text, 
	teamName text,
	killsAt10 int,
	killsAt15 int,
	goldAt10 int,
	goldAt15 int,
	drakes int,
	primary key (gameID, teamName),
	foreign key (gameID) references Match(gameID),
	foreign key (teamName) references Team(teamName)
);

------------- Phase 3 change: ------------------
-- We added a teamName attribute to PlayerScoreboard because there are cases 
-- when player who have switched team during this season, we won't be able to 
-- tell which team they played on by joining the relations. For example, if 
-- Player A has played on Team T1 and T2 at least once during the current season,  
-- we cannot find out which team Player A is in for a match where T1 is playing 
-- against T2, because no relations clearly identify which team Player A played during that match. 

-- This table is used to store the in game statistics of each player.
-- A tuple in this relation represents a playerâ€™s scoreboard. gameID is an 
-- unique ID of this game. playerName is the name that the player chose to
-- show in the game. teamName is the team that the player belongs to for this 
-- match. position is the role of the player. kills is the number
-- of champions the player killed in this game. Gold is the amount of gold
-- the player earned in this game. VisionScore is a score that keeps track
-- of the warding performance of this player.
create table PlayerScoreboard (
	gameID text, 
	playerName text, 
	teamName text not null,
	position text not null, 
	kills int, 
	gold int, 
	visionScore int,
	primary key (gameID, playerName), 
	foreign key (gameID) references Match(gameID),
	foreign key (teamName) references Team(teamName)
);
